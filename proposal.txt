{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;\red26\green26\blue26;
}
\margl1440\margr1440\vieww19060\viewh12600\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qc

\f0\fs28 \cf0 Project Proposal\
CSCI E-10b\
Anna Ntenta\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8097\tx8640\pardirnatural\qc

\fs36 \cf0 \'93 SAGE \'94\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs24 \cf0 \

\b\fs28 What the project is supposed to do
\b0 \
\
SAGE is a tongue-in-cheek program that emulates a\cf2 \cb3  jovial concierge. \cf4 \cb1 The program is loosely based on the famous ELIZA, the therapist computer from the 1970\'92s, and Apple\'92s more recent assistant program SIRI. \cf2 \cb3 SAGE\'92s main function is to help the user to do or get things in an unfamiliar environment. \cf0 \cb1 Pattern matching will lie behind most of the SAGE\'92s supposed knowledge. \cf2 \cb3 The user interface will consist of a very simple window in which SAGE and the user pose and answer questions. In the end you can choose to save a transcript of your conversation with SAGE. My goal is to make the program as sage-like as possible, but I surmise that it will instead mostly aggravate the user with nonsense replies.\
\

\b \cf0 \cb1 Why anyone in their right mind would want to write a program to do what this program is going to do\

\b0 \
\pard\pardeftab720
\cf0 I\'92m interested in pattern matching techniques that can be employed to automate answers in a finite \'93universe.\'94 An example would be an online help desk, such as a web app that helps a user go about a certain task (buy insurance on healthcare.gov or register a vehicle in Florida, for instance.)  I\'92m also interested in the psychological aspects of learning and doing. Perhaps the more human-like our interactions with a computer are, the more we might feel at ease and use the program. The downside is of course that it is very hard to make a simple program respond in any way like a human would, since it has virtually no contextual knowledge and no way to understand a sentence based on grammar.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 The form of the input and output, perhaps with a sample dialogue\

\b0 \
Interaction with SAGE is done by typing - both input and output are strings, and might go something like this:\
\

\i\fs24 [SAGE] DEAR FRIEND, HOW CAN I HELP YOU TODAY?\
\
[user] i want to see the vatican.\
\
THE VATICAN IS AN EXCELLENT CHOICE. THE VATICAN IS ON VIA CORSO, 63144 ROME, ITALY.\
\
IS THE VATICAN THE ONLY THING YOU WANT TO SEE TODAY?\
\
no, i also want to have dinner.\
\
WHAT ARE YOUR FAVORITE FOODS?\
\
seafood and ice cream\
\
THERE ARE TWO RESTAURANTS YOU MIGHT BE INTERESTED IN:\
\'91TUTTI DI MARE\'92 ON VIA VENETO 14, 63111, ROME, ITALY  AND\
\'91GELATO MAXIMUS\'92 ON VIA TREVI 22, ROME, ITALY\
\
WOULD YOU LIKE TO VISIT AN ART GALLERY?\
\
no, i don\'92t like art.\
\
I\'92M SORRY TO HEAR THAT. \
EARLIER YOU SAID THAT YOU WERE INTERESTED IN THE VATICAN. HOW ELSE CAN WE AMUSE YOU?\
\
i need shoes.\
\
THE TAKASHIMAYA DEPARTMENT STORE IS VERY NICE. IT\'92S ON VIA SPIGA 9, 63511, ROME ITALY.\
\
WOULD YOU LIKE THE NUMBER FOR A REPUTABLE TAXI COMPANY?\
\
no thanks, i\'92ll walk. bye.\
\
ENJOY!
\i0\fs28 \
\

\b The main algorithms and data structures\

\b0 \
The program will use regular expressions to represent patterns, and Strings of input to compare against the pattern (Pattern and Matcher classes) .\
The main part of the program, the method response(), will consist of a while-loop that takes a String \'91question\'92 as input and returns a String \'91response\'92.\
\
It will perform the following:\
\
- Get input from user (\'93I want to see the Vatican\'94)\
- Transform the input to generate a \'93you\'94-question (\'93You want to see the vatican?\'94)\
- Search the input for keywords (\'93vatican\'94) and against patterns.\
- If there is a match, generate or retrieve a response (or choose one of several if there are more than one match)\
- If there is no match, use a general response. (\'93I\'92m sorry. Would you like me to recommend some sights?\'94)\
- Print the response\
\
In pseudocode:\
\

\f1 Pattern [] patterns; // pre-defined keywords and patterns\
String word;	// stores words that match\
 	\
while(user does not type \'91quit\'92) \{\
	get String input;\
	transform(input);				// transform input from \'93I\'94 to \'93you\'94 etc\
	for each pattern p \{\
	if (matches(p, input)	)			// check if there\'92s a match\
		generateResponse();		// build a response\
	else\
		pick general response;\
	display response;\
\}\

\f0 \

\b A list of the main subprograms I will probably need\

\b0 \
greeting() - runs on start and prints a greeting and instructions for how to use the program\
\
response() - the main method - gets input from user, checks for pattern matches and generates a response\
\
  readInput() - reads input from user as long as the user does not type \'93exit\'94 or \'93bye\'94\
\
  transformInput() - transform the input to the computer\'92s \'93point of view\'94\
  \
  matches() - searches the transformed input for keywords and matching patterns. Stores matched words and patterns.\
		   Picks a general response if there is no match.\
\
  generateResponse() - builds a response around the pattern or key word.\
  \
  printOutput()   \
\
}